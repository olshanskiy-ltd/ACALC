{"version":3,"sources":["Calc/Input.jsx","buttons/Buttons.jsx","inpusResult/Result.jsx","Calc/Calc.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","dispatch","className","type","placeholder","onChange","e","fn","ms","timeout","fnCall","apply","arguments","clearTimeout","setTimeout","debounce","value","target","Buttons","inputNumber","onClick","flatCount","Result","resultEntrance","resultLevel","reducer","state","action","entrance","level","Math","ceil","floor","RootComponent","useReducer","setResultEntrance","setResultLevel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb9e9c1d.chunk.js","sourcesContent":["import React  from \"react\";\r\n\r\n\r\nexport const Input = ({ dispatch }) => {\r\n\r\n    const debounce = (fn, ms) => {\r\n        let timeout;\r\n        // console.log('er');\r\n        return function () {\r\n            const fnCall = () => { fn.apply(this, arguments) }\r\n            clearTimeout(timeout);\r\n\r\n            timeout = setTimeout(fnCall, ms)\r\n            \r\n        };\r\n        \r\n        \r\n\r\n    }\r\n    // const [inputNumber, setInputNumber] = useState(0)\r\n\r\n    // const onChange = debounce(dispatch({type: 'changeValue', value: e.target.value}), 500)\r\n\r\n    return (\r\n        <div className='inBut'>\r\n           <input type=\"text\"\r\n            placeholder='Введи номер квартиры'\r\n            onChange={(e) =>debounce(dispatch({type: 'changeValue', value: e.target.value}), 5000)}\r\n            // value={inputNumber}\r\n           />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Buttons = ({ inputNumber, dispatch }) => {\r\n\r\n    \r\n \r\n\r\n    return(\r\n        <div className='buttons'>\r\n            <button className='button' onClick={() => dispatch({ type: 16, flatCount: 64 })}>16</button>\r\n            <button className='button' onClick={() => dispatch({ type: 16, flatCount: 143 })}>16 вертолёт</button>\r\n            <button className='button' onClick={() => dispatch({ type: 12 })}>12</button>\r\n            <button className='button' onClick={() => dispatch({ type: 9, flatCount: 53 })}>9 (53)</button>\r\n            <button className='button'onClick={() => dispatch({ type: 9, flatCount: 36 })}>9 (36)</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Result = ({ resultEntrance, resultLevel}) => {\r\n\r\n    // const resultEntrance = 0;\r\n    // const resultLevel = 0;\r\n\r\n\r\n    return(\r\n\r\n        <div className='InputResult'>\r\n            <h3>подъезд: {resultEntrance}</h3>\r\n            <h3>этаж: {resultLevel}</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport './calc.scss'\r\nimport { Input } from './Input'\r\nimport { Buttons } from \"../buttons/Buttons\";\r\nimport { Result } from '../inpusResult/Result';\r\n\r\nconst reducer = (state, action) => {\r\n    // console.log(action.value)\r\n    if (action.type !== 'changeValue' && +state.inputNumber === 0 ) {\r\n    return {\r\n        ...state,\r\n        entrance: 0,\r\n        level: 0\r\n        }\r\n     }\r\n\r\n    \r\n\r\n    switch(action.type){\r\n        \r\n        case 16 : {\r\n            if(action.flatCount === 64){\r\n            \r\n            return {\r\n                    ...state,\r\n                    entrance: Math.ceil(state.inputNumber / 64),\r\n\r\n\r\n                    level: Math.ceil((state.inputNumber - 64 * Math.floor(state.inputNumber / 64)) / 4) || 16 \r\n                }\r\n            }\r\n            if(action.flatCount === 143){\r\n                if(state.inputNumber > 143){\r\n                    return {\r\n                        ...state,\r\n                        entrance: `\\n неверный \\n номер \\n квартиры`\r\n                    }\r\n                    \r\n                } else\r\n                return {\r\n                    ...state,\r\n                    entrance: Math.ceil(state.inputNumber / 143),\r\n\r\n\r\n                    // level: Math.ceil((state.inputNumber - 143 * Math.floor(state.inputNumber / 143)) / 9) || 16 \r\n                    \r\n\r\n                    level: Math.ceil((state.inputNumber - 143 * Math.floor(state.inputNumber / 143)) / 9) === 0 ? \r\n                        16\r\n                        :\r\n                        Math.ceil((state.inputNumber - 143 * Math.floor(state.inputNumber / 143) +1) / 9)\r\n                }\r\n            }\r\n            break\r\n            \r\n        }\r\n        case 12 : {\r\n            return {\r\n                ...state,\r\n                entrance: Math.ceil(state.inputNumber / 48),\r\n\r\n\r\n                level: Math.ceil((state.inputNumber - 48 * Math.floor(state.inputNumber / 48)) / 4) || 1 \r\n            }\r\n        }\r\n        case 9 : {\r\n           \r\n            \r\n            if(action.flatCount === 53){\r\n                \r\n                // console.log(Math.ceil(((state.inputNumber - 53 * Math.floor(state.inputNumber / 53))) / 6));\r\n                        return {\r\n                        ...state,\r\n                       \r\n                        entrance: Math.ceil(state.inputNumber / 53),\r\n                            \r\n                        \r\n                        // level: Math.ceil(((state.inputNumber - 53 * Math.floor(state.inputNumber / 53)) + 1) / 6) \r\n\r\n                        level: Math.ceil((state.inputNumber - 53 * Math.floor(state.inputNumber / 53)) / 6) === 0 ? \r\n                        9\r\n                        :\r\n                        Math.ceil((state.inputNumber - 53 * Math.floor(state.inputNumber / 53) +1) / 6)\r\n\r\n                    }\r\n                    \r\n                }\r\n            \r\n            if(action.flatCount === 36){\r\n                \r\n                    return {\r\n                        ...state,\r\n                        entrance: Math.ceil(state.inputNumber / 36),\r\n        \r\n        \r\n                        level: Math.ceil((state.inputNumber - 36 * Math.floor(state.inputNumber / 36)) / 4) || 1 \r\n                    }\r\n                \r\n            }\r\n            // return state;\r\n\r\n            break;\r\n        \r\n            \r\n        }\r\n        case 'changeValue': {\r\n            return{\r\n                ...state,\r\n                inputNumber: action.value\r\n            }\r\n        }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const RootComponent = () => {\r\n\r\n    // const [inputNumber, setInputNumber] = useState(0)\r\n    // const [resultEntrance, setResultEntrance] = useState(0)\r\n    // const [resultLevel, setResultLevel] = useState(0)\r\n    \r\n    const initislState = {\r\n        inputNumber: 0,\r\n        flatCount: null,\r\n        entrance: 0,\r\n        level: 0,\r\n\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducer, initislState)\r\n   \r\n    // console.log(state);\r\n\r\n    return(\r\n        \r\n        <div className='mainBox'>\r\n            \r\n            <div className='inRes'>\r\n                <h1 className=''>hello</h1>\r\n                <Input \r\n                    dispatch={dispatch}\r\n                    // isPressed={isPressed}\r\n                />\r\n                <Result \r\n                    resultEntrance={state.entrance}\r\n                    resultLevel={state.level}\r\n                    \r\n                    \r\n\r\n                />\r\n                {/* <button className='button'>restart</button> */}\r\n            </div>\r\n            \r\n            <Buttons \r\n                className='buttons'\r\n                // inputNumber={inputNumber} \r\n                dispatch={dispatch}\r\n                setResultEntrance={state.entrance}\r\n                setResultLevel={state.level}\r\n            \r\n            />\r\n            \r\n\r\n        </div>\r\n        \r\n        \r\n    )\r\n}","import './App.css';\nimport './Calc/calc.scss'\nimport { RootComponent } from './Calc/Calc';\n\nfunction App() {\n  return (\n    <div className='mainPage'>\n      <RootComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}